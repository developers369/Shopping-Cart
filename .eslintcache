[{"/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/index.js":"1","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/ShoppingCart.jsx":"2","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/DisplayItems.jsx":"3","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/Cart.jsx":"4","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/Item.jsx":"5"},{"size":460,"mtime":1610382420000,"results":"6","hashOfConfig":"7"},{"size":5533,"mtime":1610368827000,"results":"8","hashOfConfig":"7"},{"size":3408,"mtime":1610368539000,"results":"9","hashOfConfig":"7"},{"size":5206,"mtime":1610366992000,"results":"10","hashOfConfig":"7"},{"size":4877,"mtime":1610367721000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1t7ijt3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/index.js",[],["26","27"],"/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/ShoppingCart.jsx",["28","29"],"import React, {useState}from 'react';\nimport Cart from './Components/Cart'\nimport DisplayItems from \"./Components/DisplayItems\"\n\nlet cart = []\n\nconst ShoppingCart = (props) => {\n\n    const [totalItems,  setTotalItems] = useState(0)\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const [showCheckout, setShowCheckout] = useState(false)\n\n    console.log(\"render\")\n\n    const handleDelete = (index, quantity) => {\n\n        console.log(\"INDEX=\"+index)\n        cart.splice(index, 1)\n        setTotalItems(totalItems-quantity)\n    }\n\n    const handleClick = () => {\n\n        // alert(\"Clicked\")\n        setIsOpen(!isOpen)\n    }\n\n    const handlePlus = (item) => {\n\n        console.log(item)\n        cart.map((product, index) => {\n\n            if(item.product_id === product.product_id){\n                \n                product.product_qty++\n\n               \n                setTotalItems(totalItems+1)\n            }\n\n        })\n\n    }\n\n    const handleMinus = (item) => {\n\n        cart.map((product, index) => {\n\n            if(item.product_id === product.product_id){\n                \n                if(product.product_qty > 1){\n                    product.product_qty--\n                    setTotalItems(totalItems-1)\n                }\n                else{\n                    \n                    handleDelete(index, product.product_qty)\n                }\n            }\n\n        })\n    }\n\n\n    const handleClear = () => {\n        //alert(\"HELLO\")\n        cart = []\n        setTotalItems(0)\n    }\n\n    function getSubTotal(){\n        return cart.reduce((sum, i) => {\n            return sum + (i.product_qty * i.product_price)\n        }, 0)\n    }\n\n    function showCheckoutArea(){\n\n        return (\n            <div className=\"checkout-area\" style={{marginTop : \"40px\"}}>\n                <div className = \"checkout-header\" style={{textAlign : \"center\"}}>\n\n                    <h1>Checkout Area</h1>\n                    <span className=\"cart-size\">{totalItems}</span>\n                    <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n\n                </div>\n\n                <div className=\"checkout-content\" style={{fontSize: \"20px\", marginTop: \"20px\"}}>\n\n                    <table className=\"checkout-table\" >\n                        <thead>\n                            <tr>\n                                <th>SKU</th>\n                                <th>Name</th>\n                                <th>Description</th>\n                                <th>Amount</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        \n                        <tbody>\n                            {\n                                cart.map((item) =>{\n                                    return <tr key={Math.round() * 100}>\n                                        <td>{item.product_id}</td>\n                                        <td>{item.product_name}</td>\n                                        <td>This is a {item.product_name}</td>\n                                        <td>{item.product_qty}</td>\n                                        <td>${item.product_price}</td>\n                                    </tr>\n                                    \n                                })\n                            }    \n\n                            <tr>\n                                <td colSpan=\"3\"></td>\n                                <td>Subtotal:</td>\n                                <td><b>${getSubTotal().toFixed(2)}</b></td>\n                            </tr>\n\n                            <tr>\n                                <td colSpan=\"3\"></td>\n                                <td>Tax:</td>\n                                <td><b>${(getSubTotal() * 0.06).toFixed(2)}</b></td>\n                            </tr>\n                            \n                            \n                            <tr>\n                                <td colSpan=\"3\"></td>\n                                <td>Total:</td>\n                                <td><h2>{(getSubTotal() + (getSubTotal() * 0.06)).toFixed(2)}</h2></td>\n                            </tr>\n\n                        </tbody>\n                        \n                    </table>\n                    \n                        \n                    \n                </div>\n\n                <button className=\"cart-button checkout\" onClick={handleCheckout}>CheckOut</button>\n            </div>\n        )\n    }\n\n\n    const handleCheckout = () => {\n        setShowCheckout(!showCheckout)\n    }\n\n    return(\n\n        <React.Fragment>\n             \n\n             <div className=\"header\">\n                <h1>Shopping Cart</h1>\n            </div>\n            \n            <Cart \n                isOpen={isOpen}\n                onClick={() => handleClick()}\n                addedItem={cart}\n                totalItems={totalItems}\n                setTotalItems={setTotalItems}\n                onDelete={handleDelete}\n                onPlus={handlePlus} \n                onMinus={handleMinus} \n                onClear={handleClear}\n                showCheckout={showCheckout}\n                setShowCheckout={setShowCheckout}\n            />\n            \n            <DisplayItems \n                cartItems={cart}\n                totalItems={totalItems}\n                setTotalItems={setTotalItems}\n            \n            />\n\n            { cart.length > 0 && showCheckoutArea()}\n         \n        </React.Fragment>\n    )\n}\n\nexport default ShoppingCart\n","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/DisplayItems.jsx",["30","31","32"],"import React, {useState, useEffect} from 'react'\nimport Item from \"./Item\"\n\n// Import all item images\nimport monkey from \"../Images/monkey.png\"\nimport kitten from \"../Images/kitten.png\"\nimport shark from \"../Images/shark.png\"\nimport puppy from \"../Images/puppy.png\"\nimport apple from \"../Images/apple.png\"\nimport orange from \"../Images/orange.png\"\nimport peach from \"../Images/peach.png\"\nimport mango from \"../Images/mango.png\"\nimport cognac from \"../Images/cognac.png\"\nimport chain from \"../Images/chain.png\"\n\nconst products = [\n    {\n        product_id : 1,\n        product_img : monkey,\n        product_name : \"Monkey\",\n        product_qty : 1,\n        product_price : 5.50,\n    },\n    {\n        product_id : 2,\n        product_img : kitten,\n        product_name : \"Kitten\",\n        product_qty : 1,\n        product_price : 10.00,\n    },\n    {\n        product_id : 3,\n        product_img : shark,\n        product_name : \"Shark\",\n        product_qty : 1,\n        product_price : 15.00,\n    },\n    {\n      \n        product_id : 4,\n        product_img : puppy,\n        product_name : \"Puppy\",\n        product_qty : 1,\n        product_price : 5.00,\n     \n    },\n    {\n        product_id : 5,\n        product_img : apple,\n        product_name : \"Apple\",\n        product_qty : 1,\n        product_price : 1.00,\n    },\n    {\n        product_id : 6,\n        product_img : orange,\n        product_name : \"Orange\",\n        product_qty : 1,\n        product_price : 1.10,\n    },\n    {\n        product_id : 7,\n        product_img : peach,\n        product_name : \"Peach\",\n        product_qty : 1,\n        product_price : 1.50,\n    },\n    {\n        product_id : 8,\n        product_img : mango,\n        product_name : \"Mango\",\n        product_qty : 1,\n        product_price : 2.00,\n    },\n    {\n        product_id : 9,\n        product_img : cognac,\n        product_name : \"Cognac\",\n        product_qty : 1,\n        product_price : 17.38,\n    },\n    {\n        product_id : 10,\n        product_img : chain,\n        product_name : \"Chain\",\n        product_qty : 1,\n        product_price : 17.38,\n    }\n]\n\n\nconst DisplayItems = (props) => {\n\n    console.log(\"render\")\n    const handleAddToCart = (item) => {\n        \n        // console.log(props.cartArray)\n        \n        let exist = false\n        // chek whether item is exist in cart array or not\n        props.cartItems.map((product, index) => {\n\n            if(item.product_id === product.product_id){\n                exist = true\n                console.log(\"Matched\")\n                product.product_qty++\n            }\n\n            console.log(props.cartItems)\n\n        })\n\n        if(!exist)\n            props.cartItems.push(item)\n\n        props.setTotalItems(props.cartItems.reduce((sum, i) => {\n            return sum + i.product_qty\n        }, 0))\n    }\n\n   \n\n    return(\n        <div className=\"item-container\" >\n            <h1>Products</h1>\n            \n            <div className=\"displayItems\">\n\n                \n                {products.map((item) => \n                    \n                \n                    <Item key={item.product_id} img={item.product_img} name={item.product_name} price={item.product_price} onClick={() => handleAddToCart(item)}/>\n                    \n                    \n                )}\n                \n               \n            </div>\n        </div>\n    )\n}\n\nexport default DisplayItems","/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/Cart.jsx",[],"/Volumes/STORAGE DRIVE SSD/HARSHAL_PATIL/shopping-cart/src/Components/Item.jsx",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":33,"column":35,"nodeType":"41","messageId":"42","endLine":33,"endColumn":37},{"ruleId":"39","severity":1,"message":"40","line":49,"column":35,"nodeType":"41","messageId":"42","endLine":49,"endColumn":37},{"ruleId":"43","severity":1,"message":"44","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":24},{"ruleId":"43","severity":1,"message":"47","line":1,"column":26,"nodeType":"45","messageId":"46","endLine":1,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":101,"column":46,"nodeType":"41","messageId":"42","endLine":101,"endColumn":48},{"ruleId":"35","replacedBy":"48"},{"ruleId":"37","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]